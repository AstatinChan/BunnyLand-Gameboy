Pad_Button_Check:
	PUSH AF
	PUSH BC

	LD A, $mem_button_direction
	LD $mem_last_button_direction, A
	LD A, $mem_button_action
	LD $mem_last_button_action, A
	LD A, $20
	LD $reg_joypad, A
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD C, A
	LD A, $00
	
	Pad_Button_Check.Right:
		BIT 0, C
		JR NZ =Pad_Button_Check.Left
		LD A, $enum_direction_right

	Pad_Button_Check.Left:
		BIT 1, C
		JR NZ =Pad_Button_Check.Up
		LD A, $enum_direction_left

	Pad_Button_Check.Up:
		BIT 2, C
		JR NZ =Pad_Button_Check.Down
		LD A, $enum_direction_up

	Pad_Button_Check.Down:
		BIT 3, C
		JR NZ =Pad_Button_Check.End
		LD A, $enum_direction_down

	Pad_Button_Check.End:
		LD $mem_button_direction, A

	LD A, $10
	LD $reg_joypad, A
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	LD A, $reg_joypad
	XOR $0f
	AND $0f
	LD $mem_button_action, A

	POP BC
	POP AF
	RET
